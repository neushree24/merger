/** ImplantTSScannor.hpp generated by R. Yokoyama 09/06/2018 **/

#ifndef VANDLE_MERGER_IMPLANTTSSCANNOR_HPP_
#define VANDLE_MERGER_IMPLANTTSSCANNOR_HPP_

#include "TSScannorBase.hpp"
#include "PaassRootStruct.hpp"
#include "BigRIPSTreeData.h"
#include "OutputTreeData.hpp"
#include "PspmtData.hpp"

/** timestamp scannor class for implant events **/
class ImplantTSScannor : public TSScannorBase<PspmtData>
{
public:
    const static std::string kMsgPrefix;
    ImplantTSScannor(){}
    ~ImplantTSScannor(){}
    void SetReader();

protected:
    /** energy gates on PSPMT dynode**/
    Double_t low_gain_min_;
    Double_t low_gain_max_;

    ULong64_t GetTS() const
    {
        if(!tree_data_) throw kMsgPrefix + "in GetTS(), three_data is null";
        if(!tree_data_->Get()) throw kMsgPrefix + "in GetTS(), three_data->Get() returned null";
        return tree_data_->Get()->external_ts_low_;
        //return tree_data_->Get()->dyn_single_.time_;
    }

    Bool_t IsInGate(); // gate conditions
};

/** timestamp scannor class for implant events merged with BigRIPS events **/
class MergedImplantTSScannor : public TSScannorBase<OutputTreeData<PspmtData, TreeData>>
{
public:
    const static std::string kMsgPrefix;
    MergedImplantTSScannor(){}
    ~MergedImplantTSScannor(){}
    void SetReader();

protected:

    //ULong64_t GetTS() const {return tree_data_->Get()->external_ts_low_;}
    ULong64_t GetTS() const {return tree_data_->Get()->dyn_single_.time_;}
    Bool_t IsInGate();
};

#endif /* VANDLE_MERGER_IMPLANTTSSCANNOR_HPP_ */
